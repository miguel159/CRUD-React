[{"C:\\Users\\Luis\\Documents\\React\\React-practice\\crud-simple\\src\\index.js":"1","C:\\Users\\Luis\\Documents\\React\\React-practice\\crud-simple\\src\\App.jsx":"2"},{"size":202,"mtime":1612487512582,"results":"3","hashOfConfig":"4"},{"size":4679,"mtime":1613061690488,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"rjydfp",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Luis\\Documents\\React\\React-practice\\crud-simple\\src\\index.js",[],["12","13"],"C:\\Users\\Luis\\Documents\\React\\React-practice\\crud-simple\\src\\App.jsx",["14"],"import React, { useState } from 'react';\nimport { isElementOfType } from 'react-dom/test-utils';\nimport shortid from 'shortid';\n\nfunction App() {\n\n  /*----- guarda la tarea ingresada en setTarea en el evento onChange -----*/\n  const [tarea, setTarea] = useState ('')\n  const [tareas, setTareas] = useState ([])\n  const [modoEdicion, setModoEdicion] = useState(false)\n  const [id, setId] = useState('')\n  const [error, setError] = useState(null)\n\n\n  const agregarTarea = e => {\n    e.preventDefault()\n\n    /*----- valida el campo vacio  -----*/\n    if (!tarea.trim()){ \n      console.log('Elemento Vacio')\n      setError('Escriba algo por favor')\n      return\n    } \n    console.log(tarea)\n\n\n    /*----- propiedad/valor  y shortid(libreria de id aleatorio) -----*/\n    setTareas ([\n      ...tareas,\n      { id: shortid.generate() , nombreTarea:tarea}   \n    ]) \n\n    /*----- Limpia el campo del formulario-----*/\n    setTarea ('') \n\n    setError(null)\n  }\n\n  /*----- Funcion eliminar -----*/\n  const eliminarTarea = id => {\n    //console.log(id)\n    /*------ Si item.id es igual de nuestro id, se quedara fuera \n    y lo que son compatibles se guarda\n    en setTareas en arrayFiltrado -----*/\n    const arrayFiltrado = tareas.filter(item => item.id !== id)\n    setTareas(arrayFiltrado)\n  }\n\n  const editar = item => {\n    console.log(item)\n    setModoEdicion(true)\n    setTarea(item.nombreTarea)\n    setId(item.id)\n  }\n\n  const editarTarea = e => {\n    e.preventDefault()\n    if (!tarea.trim()){ \n      console.log('Elemento Vacio')\n      return\n    }\n\n    const arrayEditado = tareas.map(\n      item => item.id === id ? {id:id, nombreTarea:tarea}: item\n      )\n\n      setTareas(arrayEditado)\n      setModoEdicion(false)\n      setTarea('')\n      setId('')\n      setError(null)\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">CRUD Simple</h1>      \n      <hr/>\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <h4 className=\"text-center\"> Lista de Tareas</h4>\n          <ul className=\"list-group\">\n            {\n               tareas.length === 0 ? (\n                <div className=\"list-group-item\">No hay tareas</div>\n               ) :  (\n                tareas.map(item => (\n                  <li className=\"list-group-item\" key={item.id}>\n                    <span className=\"lead\">{item.nombreTarea}</span>\n  \n                    <button \n                      className=\"btn btn-danger btn-sm float-right mx-2\"\n                      onClick={() => eliminarTarea(item.id)}\n                    >\n                      Eliminar\n                    </button>\n  \n                    <button \n                      className=\"btn btn-warning btn-sm float-right\"\n                      onClick={() => editar(item)}\n                    >\n                      Editar\n                    </button>\n                  </li>\n                ))\n               )             \n            }\n\n            \n\n          </ul>\n        </div>\n        <div className=\"col-4\">\n          <h4 className=\"text-center\"> \n            {\n              modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'\n            }\n          </h4>\n          <form onSubmit={modoEdicion ? editarTarea : agregarTarea}>\n            {\n              error ? <span className=\"text-danger\">{error}</span> : null\n            }\n            <input \n              type=\"text\" \n              className=\"form-control mb-2\" \n              placeholder=\"Ingresar Tarea\"\n              onChange={ e => setTarea (e.target.value)}\n              /*----- limpiar campo de formularios -----*/\n              value={tarea} \n            />\n            {\n              modoEdicion ? (\n                <button className=\"btn btn-warning btn-block\" type=\"submit\">Editar</button>  //V\n                ) : (\n                  <button className=\"btn btn-dark btn-block\" type=\"submit\">Agregar</button>  //F\n                )\n              }\n          </form>\n        </div>\n      </div>\n      <hr/>\n      <div className=\"row\">\n        <div className=\"row-8\">\n          <h4 className=\"text-center\">Listar</h4>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n              <button\n                className=\"btn btn-danger btn-sm float-right mx-2\"\n              >\n                Eliminar\n              </button>\n\n              <button\n                className=\"btn btn-warning btn-sm float-right\"\n              >\n                Editar\n              </button>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-4\">\n          <h4 className=\"text-center\">Agregaaar</h4>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":2,"column":10,"nodeType":"21","messageId":"22","endLine":2,"endColumn":25},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-unused-vars","'isElementOfType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]